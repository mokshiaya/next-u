package com.example.NextU.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.NextU.models.Employer;
import com.example.NextU.services.EmailService;
import com.example.NextU.services.EmployerService;

@Controller
public class EmployerController {

    @Autowired
    private EmployerService employerService;
    
    @Autowired
    private EmailService emailService;

    private String otpCode;  // Store OTP temporarily (or use session)
    
    @GetMapping("/employer-register")
	public String showEmployerRegistrationForm(Model model) {
		model.addAttribute("employer", new Employer());
		return "employer-register";
	}
	
	//@ModelAttribute bind the form data

    @PostMapping("/registerEmployer")
    public String registerEmployer(@ModelAttribute("employer") Employer employer, 
                                   @RequestParam("confirmPassword") String confirmPassword, 
                                   @RequestParam(value = "enteredOtp", required = false) String enteredOtp, 
                                   Model model) {
        // Check if passwords match
        if (!employer.getPassword().equals(confirmPassword)) {
            model.addAttribute("errorMsg", "Passwords do not match");
            return "employer-register";
        }

        // If OTP is already entered, validate it
        if (enteredOtp != null && !enteredOtp.isEmpty()) {
            if (enteredOtp.equals(otpCode)) {
                employer.setOtpVerified(true);  // Mark as verified
                boolean status = employerService.saveEmployer(employer);
                if (status) {
                    model.addAttribute("successMsg", "User registered successfully");
                    return "login";  // Redirect to login page
                } else {
                    model.addAttribute("errorMsg", "User not registered");
                    return "employer-register";
                }
            } else {
                model.addAttribute("errorMsg", "Invalid OTP. Please try again.");
                model.addAttribute("showOtpField", true);  // Show OTP field again
                return "employer-register";
            }
        }

        // Generate and send OTP
        otpCode = emailService.generateOtp();
        emailService.sendOtpEmail(employer.getEmail(), otpCode);

        model.addAttribute("successMsg", "OTP has been sent to your email. Please enter the OTP to verify.");
        model.addAttribute("employer", employer);  // Retain data in case of reload
        model.addAttribute("showOtpField", true);  // Show OTP input field
        return "employer-register";  // Stay on the same registration page
    }
}
